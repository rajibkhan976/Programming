openapi: "3.0.0"
info:
  version: 1.0.0
  title: Unspecified user API for BongBong?
  description: |
    <b>html Formatting is possible</b>
    
    [markdown too](http://localhost:3000/swagger.yaml)
    
    As long as the indent isn't less than what you have
    
    ```json
    {"code": "can be formatted in markdown"}
    ```
  license:
    name: MIT
servers:
  - url: http://localhost:3000
paths:
  /users:
    get:
      summary: List all users
      operationId: listUsers
      tags:
        - users
      parameters:
        - name: userName
          in: query
          description: name of the user to filter
          required: false
          schema:
            type: string
      responses:
        '200':
          description: a list of users matching the fiter
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Users"
        '400':
          description: request format error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserError"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a user
      operationId: createUser
      tags:
        - users
      requestBody:
        content:
          application/json:    
            schema:
              $ref: "#/components/schemas/User"
      responses:
        '201':
          description: the created user
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Users"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      required:
      - username
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
          description: "must be unique, stored in lowercase"
        address:
          type: object
          properties:
            street:
              type: string
            suite:
              type: string
            city:
              type: string
            zipcode:
              type: integer
            geo:
              type: object
              properties:
                lat:
                  type: number
                  format: float
                lng:
                  type: number
                  format: float
    Users:
      type: array
      items: 
        $ref: "#/components/schemas/User"
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    UserError:
      type: object
      properties:
        error:
          type: object
          properties:
            expose:
              type: boolean
            statusCode:
              type: integer
            status:
              type: integer
            body:
              type: string
              description: body contents of the request that failed
            type:
              type: string
              description: type of error
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            name:
              type: string
              description: name of the internal error

            

